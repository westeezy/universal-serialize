{"version":3,"sources":["webpack://universal-serialize/webpack/universalModuleDefinition","webpack://universal-serialize/webpack/bootstrap","webpack://universal-serialize/./src/constants.ts","webpack://universal-serialize/./src/common.ts","webpack://universal-serialize/./src/serializers/array.ts","webpack://universal-serialize/./src/serializers/boolean.ts","webpack://universal-serialize/./src/serializers/date.ts","webpack://universal-serialize/./src/serializers/object.ts","webpack://universal-serialize/./src/serializers/error.ts","webpack://universal-serialize/./src/serializers/function.ts","webpack://universal-serialize/./src/serializers/number.ts","webpack://universal-serialize/./src/serializers/promise.ts","webpack://universal-serialize/./src/serializers/regex.ts","webpack://universal-serialize/./src/serializers/string.ts","webpack://universal-serialize/./src/serializers/null.ts","webpack://universal-serialize/./src/serializers/undefined.ts","webpack://universal-serialize/./src/serialize.ts","webpack://universal-serialize/./src/deserialize.ts","webpack://universal-serialize/./src/types.ts"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","hasOwnProperty","p","s","TYPE","FUNCTION","ERROR","PROMISE","REGEX","DATE","ARRAY","OBJECT","STRING","NUMBER","BOOLEAN","NULL","UNDEFINED","isSerializedType","item","__type__","determineType","val","Array","isArray","Error","then","toString","serializeType","type","__val__","serializeArray","deserializeArray","serializeBoolean","deserializeBoolean","serializeDate","toJSON","deserializeDate","Date","serializeObject","deserializeObject","serializeError","message","stack","code","data","deserializeError","error","serializeFunction","deserializeFunction","serializeNumber","deserializeNumber","serializePromise","deserializePromise","serializeRegex","source","deserializeRegex","RegExp","serializeString","deserializeString","serializeNull","deserializeNull","serializeUndefined","deserializeUndefined","SERIALIZER","defaultSerializers","serialize","obj","serializers","result","JSON","stringify","serializer","DESERIALIZER","defaultDeserializers","deserialize","str","deserializers","parse","deserializer","TYPES"],"mappings":"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","file":"universalSerialize.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"universal-serialize\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"universal-serialize\"] = factory();\n\telse\n\t\troot[\"universal-serialize\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export const TYPE = {\n    FUNCTION:  'function',\n    ERROR:     'error',\n    PROMISE:   'promise',\n    REGEX:     'regex',\n    DATE:      'date',\n    ARRAY:     'array',\n    OBJECT:    'object',\n    STRING:    'string',\n    NUMBER:    'number',\n    BOOLEAN:   'boolean',\n    NULL:      'null',\n    UNDEFINED: 'undefined'\n} as const;\n\n","import { $Values } from 'utility-types';\n\nimport { TYPE } from './constants';\nimport type { CustomSerializedType } from './types';\n\nexport function isSerializedType(item: any): boolean { // eslint-disable-line @typescript-eslint/explicit-module-boundary-types\n    return typeof item === 'object' && item !== null && typeof item.__type__ === 'string';\n}\n\nexport function determineType(val: unknown): $Values<typeof TYPE> {\n    if (typeof val === 'undefined') {\n        return TYPE.UNDEFINED;\n    }\n\n    if (val === null) {\n        return TYPE.NULL;\n    }\n\n    if (Array.isArray(val)) {\n        return TYPE.ARRAY;\n    }\n\n    if (typeof val === 'function') {\n        return TYPE.FUNCTION;\n    }\n\n    if (typeof val === 'object') {\n        if (val instanceof Error) {\n            return TYPE.ERROR;\n        }\n\n        if (typeof (val as any).then === 'function') {\n            return TYPE.PROMISE;\n        }\n\n        if (Object.prototype.toString.call(val) === '[object RegExp]') {\n            return TYPE.REGEX;\n        }\n\n        if (Object.prototype.toString.call(val) === '[object Date]') {\n            return TYPE.DATE;\n        }\n\n        return TYPE.OBJECT;\n    }\n\n    if (typeof val === 'string') {\n        return TYPE.STRING;\n    }\n\n    if (typeof val === 'number') {\n        return TYPE.NUMBER;\n    }\n\n    if (typeof val === 'boolean') {\n        return TYPE.BOOLEAN;\n    }\n}\nexport function serializeType<T extends string, V extends unknown>(type: T, val: V): CustomSerializedType<T, V> {\n    return {\n        __type__: type,\n        __val__:  val\n    };\n}\n","export type SerializedArray<T extends unknown = unknown> = ReadonlyArray<T>;\nexport function serializeArray<T extends unknown>(val: ReadonlyArray<T>): SerializedArray<T> {\n    return val;\n}\nexport function deserializeArray<T extends unknown>(val: SerializedArray<T>): ReadonlyArray<T> {\n    return val;\n}\n","export type SerializedBoolean = boolean;\nexport function serializeBoolean(val: boolean): SerializedBoolean {\n    return val;\n}\nexport function deserializeBoolean(val: SerializedBoolean): boolean {\n    return val;\n}\n","import { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nexport type SerializedDate = string;\nexport function serializeDate(val: Date): NativeSerializedType<typeof TYPE.DATE, SerializedDate> {\n    return serializeType(TYPE.DATE, val.toJSON());\n}\nexport function deserializeDate(val: string): Date {\n    return new Date(val);\n}\n","export type SerializedObject = Record<string, any>;\nexport function serializeObject(val: Record<string, any>): SerializedObject {\n    return val;\n}\nexport function deserializeObject(val: SerializedObject): Record<string, any> {\n    return val;\n}\n","import { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nimport { serializeObject } from './object';\n\nexport type SerializedError = {\n    message: string;\n    stack: string;\n    code: string | number | void;\n    data: unknown;\n};\n\nexport function serializeError({\n    message,\n    stack,\n    // @ts-ignore - Error does not match NodeJS.ErrnoException\n    code,\n    // @ts-ignore - not sure where data comes from\n    data\n}: Error): NativeSerializedType<typeof TYPE.ERROR, SerializedError> {\n    return serializeType(TYPE.ERROR, {\n        message,\n        stack,\n        code,\n        data\n    });\n}\nexport function deserializeError({\n    message,\n    stack,\n    code,\n    data\n}: SerializedError): Error {\n    const error = new Error(message);\n    // @ts-ignore\n    error.code = code;\n\n    if (data) {\n        // @ts-ignore\n        error.data = serializeObject(data);\n    }\n\n    error.stack = `${ stack }\\n\\n${ error.stack }`;\n    return error;\n}\n","export type SerializedFunction = void;\nexport function serializeFunction(): SerializedFunction {\n    // pass\n}\nexport function deserializeFunction(): void {\n    throw new Error(`Function serialization is not implemented; nothing to deserialize`);\n}\n","export type SerializedNumber = number;\nexport function serializeNumber(val: number): SerializedNumber {\n    return val;\n}\nexport function deserializeNumber(val: SerializedNumber): number {\n    return val;\n}\n","import type { Thenable } from '../types';\n\nexport type SerializedPromise = void;\nexport function serializePromise(): SerializedPromise {\n    // pass\n}\nexport function deserializePromise(): Thenable {\n    throw new Error(`Promise serialization is not implemented; nothing to deserialize`);\n}\n","import { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nexport type SerializedRegex = string;\n\nexport function serializeRegex(val: RegExp): NativeSerializedType<typeof TYPE.REGEX, SerializedRegex> {\n    return serializeType(TYPE.REGEX, val.source);\n}\nexport function deserializeRegex(val: string): RegExp {\n    // eslint-disable-next-line security/detect-non-literal-regexp\n    return new RegExp(val);\n}\n","export type SerializedString = string;\nexport function serializeString(val: string): SerializedString {\n    return val;\n}\nexport function deserializeString(val: SerializedString): string {\n    return val;\n}\n","export type SerializedNull = null;\nexport function serializeNull(val: null): SerializedNull {\n    return val;\n}\nexport function deserializeNull(val: SerializedNull): null {\n    return val;\n}\n","import type { NativeSerializedType } from '../types';\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\n\nexport type SerializedUndefined = void;\nexport function serializeUndefined(val: void): NativeSerializedType<typeof TYPE.UNDEFINED, SerializedUndefined> {\n    return serializeType(TYPE.UNDEFINED, val);\n}\nexport function deserializeUndefined(): void {\n    // pass\n}\n","import { $Values } from 'utility-types';\n\nimport { TYPE } from './constants';\nimport type { Thenable, CustomSerializedType, NativeSerializedType } from './types';\nimport { determineType, isSerializedType } from './common';\nimport type { SerializedError, SerializedRegex, SerializedDate } from './serializers';\nimport { serializeFunction, serializeError, serializePromise, serializeRegex, serializeDate, serializeArray, serializeObject, serializeString, serializeNumber, serializeBoolean, serializeNull, serializeUndefined } from './serializers';\n\ntype NativeSerializer<V extends unknown, S extends unknown, T extends $Values<typeof TYPE>> = (value: V, key: string) => NativeSerializedType<T, S>;\ntype CustomSerializer<V extends unknown, S extends unknown, T extends string> = (value: V, key: string) => CustomSerializedType<T, S>;\ntype PrimitiveSerializer<V extends unknown, S extends unknown> = (value: V, key: string) => S;\ntype CustomOrPrimitiveSerializer<V extends unknown, T extends string> = CustomSerializer<V, any, T> | PrimitiveSerializer<V, any>;\ntype NativeOrCustomOrPrimitiveSerializer<V extends unknown, S extends unknown, T extends $Values<typeof TYPE>> = NativeSerializer<V, S, T> | CustomOrPrimitiveSerializer<V, T>;\n\ntype Serializers = {\n    function?: CustomOrPrimitiveSerializer<(...args: Array<any>) => any, typeof TYPE.FUNCTION>;\n    error?: NativeOrCustomOrPrimitiveSerializer<Error, SerializedError, typeof TYPE.ERROR>;\n    promise?: CustomOrPrimitiveSerializer<Thenable, typeof TYPE.PROMISE>;\n    regex?: NativeOrCustomOrPrimitiveSerializer<RegExp, SerializedRegex, typeof TYPE.REGEX>;\n    date?: NativeOrCustomOrPrimitiveSerializer<Date, SerializedDate, typeof TYPE.DATE>;\n    array?: CustomOrPrimitiveSerializer<ReadonlyArray<unknown>, typeof TYPE.ARRAY>;\n    object?: CustomOrPrimitiveSerializer<Record<string, any>, typeof TYPE.OBJECT>;\n    string?: CustomOrPrimitiveSerializer<string, typeof TYPE.STRING>;\n    number?: CustomOrPrimitiveSerializer<number, typeof TYPE.NUMBER>;\n    boolean?: CustomOrPrimitiveSerializer<boolean, typeof TYPE.BOOLEAN>;\n    null?: CustomOrPrimitiveSerializer<null, typeof TYPE.NULL>;\n    undefined?: CustomOrPrimitiveSerializer<void, typeof TYPE.UNDEFINED>;\n};\n\nconst SERIALIZER: Serializers = {\n    [TYPE.FUNCTION]:  serializeFunction,\n    [TYPE.ERROR]:     serializeError,\n    [TYPE.PROMISE]:   serializePromise,\n    [TYPE.REGEX]:     serializeRegex,\n    [TYPE.DATE]:      serializeDate,\n    [TYPE.ARRAY]:     serializeArray,\n    [TYPE.OBJECT]:    serializeObject,\n    [TYPE.STRING]:    serializeString,\n    [TYPE.NUMBER]:    serializeNumber,\n    [TYPE.BOOLEAN]:   serializeBoolean,\n    [TYPE.NULL]:      serializeNull,\n    [TYPE.UNDEFINED]: serializeUndefined\n};\n\nconst defaultSerializers: Serializers = {};\n\nexport function serialize<T extends unknown>(obj: T, serializers: Serializers = defaultSerializers): string {\n    function replacer(key: string): unknown | null | undefined {\n        // @ts-ignore\n        const val = this[key];\n\n        // @ts-ignore\n        if (isSerializedType(this)) {\n            return val;\n        }\n\n        const type = determineType(val);\n\n        if (!type) {\n            return val;\n        }\n\n        const serializer = serializers[type] || SERIALIZER[type];\n\n        if (!serializer) {\n            return val;\n        }\n\n        // @ts-ignore\n        return serializer(val, key);\n    }\n\n    const result = JSON.stringify(obj, replacer);\n\n    if (typeof result === 'undefined') {\n        return TYPE.UNDEFINED;\n    }\n\n    return result;\n}\n","import type { Thenable } from './types';\nimport { TYPE } from './constants';\nimport { determineType, isSerializedType } from './common';\nimport type { SerializedError, SerializedRegex, SerializedDate } from './serializers';\nimport { deserializeFunction, deserializeError, deserializePromise, deserializeRegex, deserializeDate, deserializeArray, deserializeObject, deserializeString, deserializeNumber, deserializeBoolean, deserializeNull, deserializeUndefined } from './serializers';\n\ntype Deserializer<V extends unknown, S extends unknown> = (serializedValue: S, key: string) => V;\ntype PrimitiveDeserializer<V, S = V> = (serializedValue: S, key: string) => V;\n\ntype Deserializers = {\n    // @ts-ignroe - function deserlization not supported yet... Deserializer<Function, any>\n    function?: any;\n    error?: Deserializer<Error, SerializedError>;\n    promise?: Deserializer<Thenable, any>;\n    regex?: Deserializer<RegExp, SerializedRegex>;\n    date?: Deserializer<Date, SerializedDate>;\n    array?: PrimitiveDeserializer<ReadonlyArray<unknown>>;\n    object?: PrimitiveDeserializer<Record<string, any>>;\n    string?: PrimitiveDeserializer<string>;\n    number?: PrimitiveDeserializer<number>;\n    boolean?: PrimitiveDeserializer<boolean>;\n    null?: PrimitiveDeserializer<null>;\n    undefined?: PrimitiveDeserializer<void>;\n    [key: string]: Deserializer<unknown, any>;\n};\n\nconst DESERIALIZER: Deserializers = {\n    [TYPE.FUNCTION]:  deserializeFunction,\n    [TYPE.ERROR]:     deserializeError,\n    [TYPE.PROMISE]:   deserializePromise,\n    [TYPE.REGEX]:     deserializeRegex,\n    [TYPE.DATE]:      deserializeDate,\n    [TYPE.ARRAY]:     deserializeArray,\n    [TYPE.OBJECT]:    deserializeObject,\n    [TYPE.STRING]:    deserializeString,\n    [TYPE.NUMBER]:    deserializeNumber,\n    [TYPE.BOOLEAN]:   deserializeBoolean,\n    [TYPE.NULL]:      deserializeNull,\n    [TYPE.UNDEFINED]: deserializeUndefined\n};\nconst defaultDeserializers: Deserializers = {};\n\nexport function deserialize<T extends unknown | null | void>(str: string, deserializers: Deserializers = defaultDeserializers): T {\n    if (str === TYPE.UNDEFINED) {\n        // @ts-ignore\n        return;\n    }\n\n    function replacer(key: string, val: any): unknown | null | undefined {\n        // @ts-ignore\n        if (isSerializedType(this)) {\n            return val;\n        }\n\n        let type;\n        let value;\n\n        if (isSerializedType(val)) {\n            type = val.__type__;\n            value = val.__val__;\n        } else {\n            type = determineType(val);\n            value = val;\n        }\n\n        if (!type) {\n            return value;\n        }\n\n        const deserializer = deserializers[type] || DESERIALIZER[type];\n\n        if (!deserializer) {\n            return value;\n        }\n\n        return deserializer(value, key);\n    }\n\n    return JSON.parse(str, replacer);\n}\n","import { $Values } from 'utility-types';\n\nimport { TYPE } from './constants';\n// export something to force webpack to see this as an ES module\nexport const TYPES = true;\n\n\nexport type TypeSerializableTypes = $Values<typeof TYPE>;\n\nexport type Thenable = {\n  then: (onSuccess?: (val?: unknown) => unknown, onError?: (err?: unknown) => unknown) => Thenable;\n  catch: (onError?: (err?: unknown) => unknown) => Thenable;\n};\n\nexport type NativeSerializedType<T extends $Values<typeof TYPE>, V extends unknown> = {\n  __type__: T;\n  __val__: V;\n};\n\nexport type CustomSerializedType<T extends string, V extends unknown> = {\n  __type__: T;\n  __val__: V;\n};\n"],"sourceRoot":""}