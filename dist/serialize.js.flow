/**
 * Flowtype definitions for serialize
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.14.1
 * @flow
 */

import { $Values } from "utility-types";
import { TYPE } from "./constants";
import type {
  Thenable,
  CustomSerializedType,
  NativeSerializedType,
} from "./types";
import type {
  SerializedError,
  SerializedRegex,
  SerializedDate,
} from "./serializers";
declare type NativeSerializer<V: mixed, S: mixed, T: $Values<typeof TYPE>> = (
  value: V,
  key: string
) => NativeSerializedType<T, S>;
declare type CustomSerializer<V: mixed, S: mixed, T: string> = (
  value: V,
  key: string
) => CustomSerializedType<T, S>;
declare type PrimitiveSerializer<V: mixed, S: mixed> = (
  value: V,
  key: string
) => S;
declare type CustomOrPrimitiveSerializer<V: mixed, T: string> =
  | CustomSerializer<V, any, T>
  | PrimitiveSerializer<V, any>;
declare type NativeOrCustomOrPrimitiveSerializer<
  V: mixed,
  S: mixed,
  T: $Values<typeof TYPE>
> = NativeSerializer<V, S, T> | CustomOrPrimitiveSerializer<V, T>;
declare type Serializers = {
  function?: CustomOrPrimitiveSerializer<
    (...args: Array<any>) => any,
    typeof TYPE.FUNCTION
  >,
  error?: NativeOrCustomOrPrimitiveSerializer<
    Error,
    SerializedError,
    typeof TYPE.ERROR
  >,
  promise?: CustomOrPrimitiveSerializer<Thenable, typeof TYPE.PROMISE>,
  regex?: NativeOrCustomOrPrimitiveSerializer<
    RegExp,
    SerializedRegex,
    typeof TYPE.REGEX
  >,
  date?: NativeOrCustomOrPrimitiveSerializer<
    Date,
    SerializedDate,
    typeof TYPE.DATE
  >,
  array?: CustomOrPrimitiveSerializer<$ReadOnlyArray<mixed>, typeof TYPE.ARRAY>,
  object?: CustomOrPrimitiveSerializer<
    { [key: string]: any, ... },
    typeof TYPE.OBJECT
  >,
  string?: CustomOrPrimitiveSerializer<string, typeof TYPE.STRING>,
  number?: CustomOrPrimitiveSerializer<number, typeof TYPE.NUMBER>,
  boolean?: CustomOrPrimitiveSerializer<boolean, typeof TYPE.BOOLEAN>,
  null?: CustomOrPrimitiveSerializer<null, typeof TYPE.NULL>,
  undefined?: CustomOrPrimitiveSerializer<void, typeof TYPE.UNDEFINED>,
  ...
};
declare export function serialize<T: mixed>(
  obj: T,
  serializers?: Serializers
): string;
declare export {};
